---
title: Structural Causal Models
subtitle: introduction
author: Wouter van Amsterdam
date: 2024-08-06
format: 
    revealjs:
        theme: umcu.scss
        incremental: true
        width: 1600
        height: 900
        logo: umcu_blue.png
        center: true
categories:
    - SCM
    - day2
bibliography: bibliography.bib
---

```{r}
#| label: setup
#| echo: false
#| execute: true

suppressMessages({
  library(purrr)
  library(data.table)
  library(ggplot2); theme_set(theme_bw())
})
```

<!--

Qs:

1. what knowledge of probability to expect? e.g. conditioning

--->

## Causal inference frameworks

### What are they for?

#### Mathematical language to
  - define *causal* quantities
  - express *assumptions*
  - derive how to *estimate* causal effects

## Causal inference frameworks

### Why learn more than one?

<!--todo: add hyperlink to day 1 materials-->

- On day 1 we learned about the Potential Outcomes framework
    - Defines causal effects in terms of (averages of) *individual potential outcomes*
    - Estimation requires assumptions of (conditional) exchangeability and positivity / overlap
- There isn't only 1 way to think about causality, find one that '*clicks*'
- Now we will learn another framework: *structural causal models* (SCMs)
    - SCM approach is broader in that it can define more different types of causal questions
- Equivalence: given the same data and assumptions, get the same estimates

## lecture 1 topics

- SCMs as computer programs
  - intervention as change in program
- causal identifyability with DAGs
  - d-separation
  - back-door criterion
  - follow rules of do calculus
 
## lecture 2 topics

  - variable types: confounders, mediators, colliders
  - perfect versus soft intervention
  - critique of scm / cross-world assumptions

## practical 1

  - drawing and using dags
  - same data, different dags, different answers
  - testing d-separation?

## lecture 3 topics

  - bonus queries:
    - counterfactuals
    - probability of necessity, probability of sufficiency
  - Pearl Causal Hierarchy

## practical 2

  - causal ladder: what Q is this?

# Structural Causal Models: definitions

## The world as a computer program

### Think of the world as a computer program with a set of 

- (endogenous) *variables*:
  - `surgery` = duration of surgery (hours)
  - `los` = length of stay in hospital post surgery (days)
  - `survival` = survival time (years)
- *background variables* (exogenous):
  - `u_surgery`
  - `u_los`
  - `u_survival`
- *functions* `f_` for each *variable* which depend on its *parents* `pa_` and its own *background* `u_`:
  - `surgery = f_surgery(pa_surgery,u_surgery)`
  - `los = f_los(pa_los, u_los)`
  - `survival = f_survival(pa_survival, u_survival)`
  
:::{.fragment}

<!-- The variables $\mathbb{V}$, background $\mathbb{U}$ and functions $\mathbb{F}$  -->
Together these define a *Structural Causal Model* [see definition 7.1.1 in @pearlLogicStructureBasedCounterfactuals2009]

:::

## Structural Causal Model 1

```{r}
#| label: scm1
#| execute: false
#| echo: true
#| code-line-numbers: "1-3|5-7|9-11|13-18|20"
#| output-location: fragment

f_surgery <- function(u_surgery) { # pa_surgery = {}
  u_surgery
}

f_los <- function(surgery, u_los) { # pa_los = {surgery}
  surgery + u_los
}

f_survival <- function(surgery, los, u_survival) { # pa_survival = {sugery, los}
  survival = los - 2 * surgery + u_survival
}

scm1 <- function(u_surgery, u_los, u_survival) {
  surgery  = f_surgery(u_surgery)
  los      = f_los(surgery, u_los)
  survival = f_survival(surgery, los, u_survival)
  c(surgery=surgery, los=los, survival=survival)
}
scm1(2, 1, 5)
```

## Recursive Structural Causal Models imply a Directed Acyclic Graph

An SCM is *recursive*, i.e. *acyclic* when following the chain of parents, you never end up at the same variable twice

:::{.columns}
::::{.column width="50%"}
```{r}
#| label: scm1-dag
#| execute: false
#| echo: true
#| code-line-numbers: "|2"
scm1 <- function(u_surgery, u_los, u_survival) {
  surgery  = f_surgery(u_surgery)
  los      = f_los(surgery, u_los)
  survival = f_survival(surgery, los, u_survival)
  c(surgery=surgery, los=los, survival=survival)
}
```
::::
::::{.column width="50%"}
![](scm1_01.png){.fragment}
::::
:::

## Recursive Structural Causal Models imply a Directed Acyclic Graph

An SCM is *recursive*, i.e. *acyclic* when following the chain of parents, you never end up at the same variable twice

:::{.columns}
::::{.column width="50%"}
```{r}
#| label: scm1-dag2
#| execute: false
#| echo: true
#| code-line-numbers: "3"
scm1 <- function(u_surgery, u_los, u_survival) {
  surgery  = f_surgery(u_surgery)
  los      = f_los(surgery, u_los)
  survival = f_survival(surgery, los, u_survival)
  c(surgery=surgery, los=los, survival=survival)
}
```
::::
::::{.column width="50%"}
![](scm1_02.png)
::::
:::

## Recursive Structural Causal Models imply a Directed Acyclic Graph

An SCM is *recursive*, i.e. *acyclic* when following the chain of parents, you never end up at the same variable twice

:::{.columns}
::::{.column width="50%"}
```{r}
#| label: scm1-dag3
#| execute: false
#| echo: true
#| code-line-numbers: "4"
scm1 <- function(u_surgery, u_los, u_survival) {
  surgery  = f_surgery(u_surgery)
  los      = f_los(surgery, u_los)
  survival = f_survival(surgery, los, u_survival)
  c(surgery=surgery, los=los, survival=survival)
}
```
::::
::::{.column width="50%"}
![](scm1_03.png)
::::
:::

. . .

`scm1` and the DAG are mathematically equivalent

for the remainder, we assume recursiveness

## Submodel and Effect of Action

In `scm1` replace `f_los` with a specific *value* (e.g. `7` days):

:::{.columns}
::::{.column width="50%"}
```{r}
#| label: submodel1
#| execute: false
#| echo: true
#| code-line-numbers: "1|3|8"
#| output-location: fragment

submodel7 <- function(u_surgery, u_los, u_survival) {
  surgery = f_surgery(u_surgery)
  los = 7
  survival = f_survival(surgery, los, u_survival)
  c(surgery=surgery, los=los, survival=survival)
}

submodel7(2, 1, 5)
```

. . .

::::
::::{.column width="50%"}
::::: {.r-stack}

![](scm1_03.png){.fragment}

![](scm1_04.png){.fragment}

:::::
::::
:::

This results in a *submodel* (`submodel7`) which is the *effect of action*
denoted with the so-called *do-operator*

$$
 \text{do}(\text{los}=7)
$$

. . .

Intuitively this can be interpreted as *leave everything the same in the world,
but set this variable `los` to this value `7`*

. . . 

The *Potential Response* of `survival` is the value that `survival` would take
by setting do(los$=7$) for a particular value of `U` (in this case it is 8).

## Specifying a distribution for exogenous variables U 

```{r}
#| label: pu
#| execute: false
#| echo: true
#| code-line-numbers: "1|2|3|4|7"
#| output-location: "fragment"
sample_u <- function() {
    u_surgery  = runif(1,  2,  8)
    u_los      = runif(1, -1,  7)
    u_survival = runif(1,  8, 13)
    c(u_surgery=u_surgery, u_los=u_los, u_survival=u_survival)
}
sample_u()
```

. . .

```{r}
#| label: fig-u_samples
#| execute: true
#| echo: false
#| fig-align: "center"
#| fig-cap: "1000 random samples of U"
N = 1e3
us <- map(1:N, ~sample_u())
udf <- us |> map(~data.table(t(.x))) |> rbindlist()
udfm <- melt(udf, measure.vars=names(us[[1]]))
ggplot(udfm, aes(x=value)) + geom_histogram() + facet_grid(~variable, scales="free_x")
```

## A Probabilistic Causal Model is a SCM with a distribution over U

```{r}
#| label: pcm1
#| echo: true
#| execute: true
#| output-location: "fragment"
#| code-line-numbers: "1|2|3|7"
sample_pcm <- function() {
  U <- sample_u()
  V <- scm1(U[['u_surgery']], U[['u_los']], U[['u_survival']])
  c(U, V)
}
  
sample_pcm()
```

. . .

```{r}
#| label: fig-pcm1-samples
#| echo: false
#| fig-cap: "Realisations of endogenous variables V over random samples of U in [@fig-u_samples]"
vs <- map(us, ~do.call(scm1, as.list(.x)))
vdf <- vs |> map(~data.table(t(.x))) |> rbindlist()
vdfm <- melt(vdf, measure.vars=names(vs[[1]]))
ggplot(vdfm, aes(x=value)) + geom_histogram() + facet_grid(~variable, scales="free_x")
```

# From SCMs to real data

## Recap of definitions

- *Structural Causal model*:
  - exogenous variables U
  - endogenous variables
  - deterministic functions `f_i(pa_i,u_i)`
- *Effect of Action* do$(T=t)$: replace `f_T` with fixed value `t`
- *Probabilistic Causal Model*: SCM + distribution over U

## In the real world

- we do not observe U
- we typically do not know `f_`
  - we may be willing to place *assumptions* on `f_` (e.g. generalized linear models)
- we are presented with realizations $V_i$ of this SCM over a random sample of U
  - this is another assumption on the *sampling* but this is largely orthogonal to causal inference
- we may be interest in knowing:
  1. what is the expected survival time if we *always* admit patients for exactly 7 days?

# SCM vs potential outcomes

- definition of causal effect (PO: unobserved counterfactuals, SCM: DAG)

## References

