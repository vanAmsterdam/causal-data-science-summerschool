---
title: Structural Causal Models
subtitle: introduction
author: Wouter van Amsterdam
date: 2024-08-06
format: 
    #latex:
        #documentclass: beamer
        #lof: true
        #lot: true
    #html:
        #toc: true
        #toc-depth: 2
        #number-sections: true
    revealjs:
        theme: umcu.scss
        incremental: true
        width: 1600
        height: 900
        logo: umcu_blue.png
        center: true
execute:
    warning: false
    message: false
categories:
    - SCM
    - DAG
    - day2
bibliography: bibliography.bib
filters:
    - diagram
diagram:
  cache: true
  engine:
    tikz:
      execpath: lualatex
      header-includes:
        - '\usepackage{adjustbox}'
        - '\usetikzlibrary{arrows, shapes}'
---
---

```{r}
#| label: setup
#| echo: false
#| execute: true

suppressMessages({
  library(purrr)
  library(data.table)
  library(ggplot2); theme_set(theme_bw())
  library(knitr)
})
```


<!--

Qs:

1. what knowledge of probability to expect? e.g. conditioning

--->

# DAG-recap

## In past lectures on DAGs

1. causal directed acyclic graphs (DAGs) encode assumptions on what variables cause what
2. an intervention is defined as a mutilation of this DAG where the treatment variable no longer 'listens' to its parents
3. a causal effect is the effect of an intervention
4. DAG patterns:
    - fork (confounding)
    - chain (mediation)
    - collider

5. typically: 
  - condition on confounders, don't condition on mediators or colliders

6. in more complex DAGs, use d-separation to check identifyability
7. backdoor criterion

## In this lecture: structural causal models (SCMs)

::: {layout-ncol=2}

\begin{align}
  U_Z, U_T, U_Y &\sim p(U) \\
  Z &= f_Z(U_Z) \\
  T &= f_T(Z,U_T) \\
  Y &= f_Y(T,Z,U_Y)
\end{align}

![](figs/scmart.png)

:::

## Why SCMs?

With DAGs we can:

- express (non-parametric) prior knowledge
- understand that seeing $\neq$ doing
- know what variables to condition on for estimating treatment effect

- DAGs and RCTs do not cover all causal questions
- SCMs go a level deeper than DAGs
- DAGs naturally 'arise' from SCMs
- some questions are not identified when only specifying a DAG, but we may have additional information that can lead to identification
- understand 'identifyability'
- SCM thinking aligns [^according to me] with physical thinking about the world and is a natural way to think about causality



---

![](figs/inception_go_deeper.jpg)

## Topics of today

- SCMs: the world as computer programs
- interventions are submodels



# Structural Causal Models: definitions

## Think of the world as a computer program with a set of 

- (endogenous) *variables*:
  - `surgery` = duration of surgery (hours)
  - `los` = length of stay in hospital post surgery (days)
  - `survival` = survival time (years)
- *background variables* (exogenous):
  - `u_surgery`, `u_los`, `u_survival`
- *functions* `f_` for each *variable* which depend on its *parents* `pa_` and its own *background* `u_`:
  - `surgery = f_surgery(pa_surgery,u_surgery)`
  - `los = f_los(pa_los, u_los)`
  - `survival = f_survival(pa_survival, u_survival)`
  
:::{.fragment}

<!-- The variables $\mathbb{V}$, background $\mathbb{U}$ and functions $\mathbb{F}$  -->
Together these define a *Structural Causal Model* [see definition 7.1.1 in @pearlLogicStructureBasedCounterfactuals2009, and further] (notation: $M=<U,V,F>$)

:::

## Structural Causal Model 1

```{r}
#| label: scm1
#| execute: false
#| echo: true
#| code-line-numbers: "1-3|5-7|9-11|13-18|20"
#| output-location: fragment

f_surgery <- function(u_surgery) { # pa_surgery = {}
  u_surgery
}
f_los <- function(surgery, u_los) { # pa_los = {surgery}
  surgery + u_los
}
f_survival <- function(surgery, los, u_survival) { # pa_survival = {sugery, los}
  survival = los - 2 * surgery + u_survival
}

scm1 <- function(u_surgery, u_los, u_survival) {
  surgery  = f_surgery(u_surgery)
  los      = f_los(surgery, u_los)
  survival = f_survival(surgery, los, u_survival)
  c(surgery=surgery, los=los, survival=survival)
}
scm1(2, 1, 5)
```

## Recursive Structural Causal Models imply a Directed Acyclic Graph

An SCM is *recursive*, i.e. *acyclic* when following the chain of parents, you never end up at the same variable twice

:::{.columns}
::::{.column width="50%"}
```{r}
#| label: scm1-dag
#| execute: false
#| echo: true
#| code-line-numbers: "|2"
scm1 <- function(u_surgery, u_los, u_survival) {
  surgery  = f_surgery(u_surgery)
  los      = f_los(surgery, u_los)
  survival = f_survival(surgery, los, u_survival)
  c(surgery=surgery, los=los, survival=survival)
}
```
::::
::::{.column width="50%"}
![](scm1_01.png){.fragment}
::::
:::

## Recursive Structural Causal Models imply a Directed Acyclic Graph

An SCM is *recursive*, i.e. *acyclic* when following the chain of parents, you never end up at the same variable twice

:::{.columns}
::::{.column width="50%"}
```{r}
#| label: scm1-dag2
#| execute: false
#| echo: true
#| code-line-numbers: "3"
scm1 <- function(u_surgery, u_los, u_survival) {
  surgery  = f_surgery(u_surgery)
  los      = f_los(surgery, u_los)
  survival = f_survival(surgery, los, u_survival)
  c(surgery=surgery, los=los, survival=survival)
}
```
::::
::::{.column width="50%"}
![](scm1_02.png)
::::
:::

## Recursive Structural Causal Models imply a Directed Acyclic Graph

An SCM is *recursive*, i.e. *acyclic* when following the chain of parents, you never end up at the same variable twice

:::{.columns}
::::{.column width="50%"}
```{r}
#| label: scm1-dag3
#| execute: false
#| echo: true
#| code-line-numbers: "4"
scm1 <- function(u_surgery, u_los, u_survival) {
  surgery  = f_surgery(u_surgery)
  los      = f_los(surgery, u_los)
  survival = f_survival(surgery, los, u_survival)
  c(surgery=surgery, los=los, survival=survival)
}
```
::::
::::{.column width="50%"}
![](scm1_03.png)
::::
:::

. . .

`scm1` and the DAG are equivalent (they describe the same knowledge of the world)

for the remainder, we assume recursiveness


## Submodel and Effect of Action

- **submodel**: in `scm1` replace `f_los` with a specific *value*, e.g. `7` days
<!-- todo: make this side-by-side -->

```{r}
#| label: submodel1
#| execute: false
#| echo: true
#| code-line-numbers: "1|3|8"
#| output-location: fragment

submodel7 <- function(u_surgery, u_los, u_survival) {
  surgery = f_surgery(u_surgery)
  los = 7
  survival = f_survival(surgery, los, u_survival)
  c(surgery=surgery, los=los, survival=survival)
}

submodel7(2, 1, 5)
```

- **effect of action**: resulting SCM of submodel (notation: $M_x=<U,V,F_x>$)


## Submodel and Effect of Action as a mutilated DAG

In `scm1` replace `f_los` with a specific *value*, e.g. `7` days (notation: $M_x$)

:::{.columns}
::::{.column width="50%"}
```{r}
#| label: submodel-dag
#| execute: false
#| echo: true

submodel7 <- function(u_surgery, u_los, u_survival) {
  surgery = f_surgery(u_surgery)
  los = 7
  survival = f_survival(surgery, los, u_survival)
  c(surgery=surgery, los=los, survival=survival)
}

submodel7(2, 1, 5)
```

::::
::::{.column width="50%"}
::::: {.r-stack}

![](scm1_03.png){.fragment}

![](scm1_04.png){.fragment}

:::::
::::
:::

. . .

The DAG describes a submodel where $T$ no longer 'listens' to any variables but is controlled to be equal to a specific value (e.g. 7)

The *Effect of Action* $do(X=x)$ is defined as the submodel $M_x$.


## Specifying a distribution for exogenous variables U 

- Exogenous variables `U` represent random variation in the world.
- We can specify a *distribution* for them (e.g. Gaussian, Uniform)

. . .

```{r}
#| label: pu
#| execute: false
#| echo: true
#| code-line-numbers: "1|2|3|4|7"
#| output-location: "fragment"
sample_u <- function() {
    u_surgery  = runif(1,  2,  8)
    u_los      = runif(1, -1,  7)
    u_survival = runif(1,  8, 13)
    c(u_surgery=u_surgery, u_los=u_los, u_survival=u_survival)
}
sample_u()
```

. . .

```{r}
#| label: fig-u_samples
#| execute: true
#| echo: false
#| fig-align: "center"
#| fig-cap: "1000 random samples of U"
N = 1e3
us <- map(1:N, ~sample_u())
udf <- us |> map(~data.table(t(.x))) |> rbindlist()
udfm <- melt(udf, measure.vars=names(us[[1]]))
ggplot(udfm, aes(x=value)) + geom_histogram() + facet_grid(~variable, scales="free_x")
```

## A Probabilistic Causal Model is a SCM with a distribution over U

```{r}
#| label: pcm1
#| echo: true
#| execute: true
#| output-location: "fragment"
#| code-line-numbers: "1|2|3|7"
sample_pcm <- function() {
  U <- sample_u()
  V <- scm1(U[['u_surgery']], U[['u_los']], U[['u_survival']])
  c(U, V)
}
  
sample_pcm()
```

. . .

```{r}
#| label: fig-pcm1-samples
#| echo: false
#| fig-cap: "Realisations of endogenous variables V over random samples of U in [@fig-u_samples]"
vs <- map(us, ~do.call(scm1, as.list(.x)))
vdf <- vs |> map(~data.table(t(.x))) |> rbindlist()
vdfm <- melt(vdf, measure.vars=names(vs[[1]]))
ggplot(vdfm, aes(x=value)) + geom_histogram() + facet_grid(~variable, scales="free_x")
```

## Calculating a treatment effect in a fully specified probabilisitc causal model

- take `U` distributions as above and set `los=7`
- calculate expected survival, taking expectation correctly
- estimand:

\begin{align}
  E[Y|\text{do}(T=7)] &= E_{Z|\text{do}(T=7)}[E[Y|\text{do}(T=7),Z]] \\
                      &= E_{Z|\text{do}(T=7)}[E[Y|\text{do}(T=7),Z]]
\end{align}

```{r}
#| label: do7
#| echo: true

N = 1e3
us <- map(1:N, ~sample_u())



```

# Identification

## Recap of definitions

- *Structural Causal model*:
  - endogenous variables $V$
  - exogenous (noise) variables $U$
  - deterministic functions `f_i(pa_i,u_i)`
- *Effect of Action* do$(T=t)$: *submodel* where `f_T` replaced with fixed value `t`
- *Probabilistic Causal Model*: SCM + distribution over U

## In the real world

- knowing the SCM is a super-power: you basically know everything revelant about the system, but in the real world:
- we do not observe $U$
- we typically do not know `f_`
  - we may be willing to place *assumptions* on `f_` (e.g. generalized linear models)
- we are presented with realizations $V_i$ of this SCM over a random sample of U
  - this is another assumption on the *sampling* but this is largely orthogonal to causal inference
- we may be interest in knowing:
  1. what is the expected survival time if we *always* admit patients for exactly 7 days?

. . .

When and how might we learn the answer to such questions?

## Identification

Causal effect identification:

## Definition 3.2.3 (Identifiability)

Let $Q(M)$ be any computable quantity of a model $M$.

. . .

We say that $Q$ is **identifiable** in a class $\mathbb{M}$ of models if, for any pairs of models $M_1$ and $M_2$ from $\mathbb{M}$,

. . . 

$Q(M_1) = Q(M_2)$ whenever $P_{M_1} (y) = P_{M_2} (y)$.

. . .

If our observations are limited and permit only a partial set $F_M$ of features (of $P_M(y)$) to be estimated,

. . .

we define $Q$ to be identifiable from $F_M$ if $Q(M_1) = Q(M_2)$ whenever $F_{M_1} = F_{M_2}$.

## Idenfitication in pictures

Someone killed the priest {{< iconify ph:knife >}} , we want to know who-dunnit ($=Q$)

. . . 

Based on prior knowledge on *5 suspects* (all the SCMs compatible with our DAG)

. . .

![](figs/whodunnit-col.png)

. . .

If we had full data, we would have know it was $M_3$


## Idenfitication in pictures

Someone killed the priest {{< iconify ph:knife >}} , we want to know who-dunnit ($=Q$)

Based on prior knowledge on *5 suspects* (all the SCMs compatible with our DAG)

![](figs/whodunnit-gray.png)

If we had full data, we would have know it was $M_3$

Unfortunately, it was dark an we only got a gray-scale image of the perpetrator

. . .

All our suspects (models) lead to the same partial observations

. . . 

Based on *observed data* and *assumptions* we cannot *identify* the answer to our question $Q$,

. . .

i.e. multiple models with different answers for $Q$ fit the observed data equally well

## Not identified vs estimand

![](scm1_03.png){fig-align="center"}

The backdoor adjustment in this DAG means the correct estimand is:

\begin{align}
  P(Y|\text{do}(T)) &= \sum_{z} P(Y|T,z)P(Z=z)
\end{align}

- If we did not observe $Z$, we could still come up with a latent-variable model for $Z$ and a model for $Y|T,Z$ and get a value.
- However, we can formulate multiple distinct latent variable models that each yield a different treatment effect (i.e. the output of the estimand)
- But these latent variable models all fit the *observed* data equally well
- So we cannot identify the treatment effect

## Seeing is not doing

::: {layout-ncol=2}

:::: {#fig-seeing}

![](scm1_03.png)

\begin{align}
  P(Y|T) &= \sum_{z} P(Y|T,z)P(Z=z|T) \\
         &\neq P(Y|\text{do}(T))
\end{align}

::::

:::: {#fig-doing}

![](scm1_04.png)

\begin{align}
  P(Y|T) &= \sum_{z} P(Y|T,z)P(Z=z|T) \\
         &=^2 \sum_{z} P(Y|T,z)P(Z=z) \\
         &= P(Y|\text{do}(T))
\end{align}

$^2$ because in the intervened DAG, $Z$ is independent of $T$

::::

:::

. . .

- $P(Y|\text{do}(T)) \neq P(Y|T)$ is Pearl's definition of confounding
- this shows why RCTs are special (i.e. no backdoor paths into $T$)

## Definition 3.2.4 (Causal Effect Identifiability)

The causal effect of $X$ on $Y$ is identifiable from a graph $G$ if the quantity $P(y | \hat{x})$ can be computed uniquely from any positive probability of the observed variables – that is, if $P_{M_1}(y|\hat{x}) = P_{M_2}(y|\hat{x})$ for every pair of models $M_1$ and $M_2$ with $P_{M_1}(v) = P_{M_2}(v) > 0$ and $G(M_1) = G(M_2) = G$.


## Needed steps

1. what is a directed acyclic graph
2. define identifyability
3. rules for identifyability based on DAGs
   a. the backdoor rule (+ backdoor adjustment)

# Defining counterfactuals and the causal Hierarchy (of questions)

## Counterfactuals

- all of the above can be achieved with DAGs, but we haven't used SCMs *super-power* yet: counterfactuals
- e.g. *What is the expected survival if we keep all patients in the hospital for 7 days?


- Q:

. . . 

For patient Adam we had this data:
- surgery duration: 2 hours
- length of stay: 3 days
- survival: 4 years
- (i.e. we do not observe Adams `U`)

. . . 

What is the expected survival if Adam had been kept in the hospital for 5 days?


## References

